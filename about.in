@header About@

<h1>About</h1>

<p>Yosys is a framework for Verilog RTL synthesis. It currently has
extensive Verilog-2005 support and provides a basic set of
synthesis algorithms for various application domains.</p>

<p>Yosys can be adapted to perform any synthesis job by combining
the existing passes (algorithms) using synthesis scripts and
adding additional passes as needed by extending the yosys C++
code base.</p>

<p>Yosys is free software licensed under the ISC license (a GPL
compatible license that is similar in terms to the MIT license
or the 2-clause BSD license).</p>

<h2>Example Usage</h2>

<p>Yosys is controlled using synthesis scripts. For example, the following
Yosys synthesis script reads a design (with the top module <tt>mytop</tt>) from
the verilog file <tt>mydesign.v</tt>, synthesizes it to a gate-level netlist
using the cell library in the Liberty file <tt>mycells.lib</tt> and writes the
synthesized results as Verilog netlist to <tt>synth.v</tt>:</p>

<pre># read design 
read_verilog mydesign.v
hierarchy -check -top mytop

# the high-level stuff
proc; memory; opt; fsm; opt

# mapping to internal cell library
techmap; opt

# mapping flip-flops to mycells.lib
dfflibmap -liberty mycells.lib

# mapping logic to mycells.lib
abc -liberty mycells.lib

# cleanup
opt

# write synthesized design
write_verilog synth.v</pre>

<h2>Reference Designs</h2>

The following reference designs have been used to test Yosys. The correctness of the synthesis
results have been verified using a commercial formal verification tool.

<div class="tab"><table>
<tr><th>Test-Design</th><th>Source</th><th>Gates</th><th>Description / Comments</th></tr>
<tr><td><tt> aes_core    </tt></td><td>  IWLS2005 </td><td align="right"> 41837 </td><td> AES Cipher written by Rudolf Usselmann                 </td></tr>
<tr><td><tt> i2c         </tt></td><td>  IWLS2005 </td><td align="right">  1072 </td><td> WISHBONE compliant I2C Master by Richard Herveille     </td></tr>
<tr><td><tt> openmsp430  </tt></td><td> OpenCores </td><td align="right">  7173 </td><td> MSP430 compatible CPU by Olivier Girard                </td></tr>
<tr><td><tt> or1200      </tt></td><td> OpenCores </td><td align="right"> 42675 </td><td> The OpenRISC 1200 CPU by Damjan Lampret                </td></tr>
<tr><td><tt> sasc        </tt></td><td>  IWLS2005 </td><td align="right">   456 </td><td> Simple Async. Serial Comm. Device by Rudolf Usselmann  </td></tr>
<tr><td><tt> simple_spi  </tt></td><td>  IWLS2005 </td><td align="right">   690 </td><td> MC68HC11E based SPI interface by Richard Herveille     </td></tr>
<tr><td><tt> spi         </tt></td><td>  IWLS2005 </td><td align="right">  2478 </td><td> SPI IP core by Simon Srot                              </td></tr>
<tr><td><tt> ss_pcm      </tt></td><td>  IWLS2005 </td><td align="right">   279 </td><td> PCM IO Slave by Rudolf Usselmann                       </td></tr>
<tr><td><tt> systemcaes  </tt></td><td>  IWLS2005 </td><td align="right">  6893 </td><td> AES core (using SystemC to Verilog) by Javier Castillo </td></tr>
<tr><td><tt> usb_phy     </tt></td><td>  IWLS2005 </td><td align="right">   515 </td><td> USB 1.1 PHY by Rudolf Usselmann                        </td></tr>
</table></div>

@footer@
